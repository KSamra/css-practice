// variables
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

/* Resets that should be done for each design */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;

  /* by default this propert does not inherit. This will force all elements to inherit the box-sizing property from their
     parent element (in most cases the body element) */
  box-sizing: inherit;
}

/* Changing root font size. Assumes browsers have a default font-size of 16px.
   62.5% of 16px gives a base font-size of 10px */
html {
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;

  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
    to right bottom, 
    rgba($color-primary-light, 0.8), 
    rgba($color-primary-dark,0.8)), 
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  &__logo-box {
    /* sets the position to absolute relative to the parent container whose
       position is set to relative. In this case the logo-box is being positioned
       absolute within the .header element */
    position: absolute;
    top: 4rem;
    left: 4rem;
  }
  &__logo {
    /* By setting the height, the images width will scale accordingly */
    height: 3.5rem;
  }
  
  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
  
    /* center all text elements within the box. This includes the button that says "DISCOVER OUR TOURS" */
    text-align: center;
  }
}



.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  /* hack to fix animation shake  */
  backface-visibility: hidden;

  /* margin between the header text and the button */
  margin-bottom: 6rem;

  &--main {
  /* Since this is a span property, by default it is an inline block element. */
  /* To take up the entire line on its own, set the display prop to block */
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  
  }

  &--sub {
    /* Since this is a span property, by default it is an inline block element. */
    /* To take up the entire line on its own, set the display prop to block */
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    /* Shorthand way of specifying animation-name, animation-duration, and animation-timing-function */
    animation: moveInRight 1s ease-out;
  }
}



/* Can name this whatever */
@keyframes moveInLeft {
  /* When the animation starts */
  0% {
    opacity: 0;
    /* have the element start 100px to the left from where it will be positioned */
    transform: translateX(-10rem);
  }

  80% {
    /* moves a little further right than the final position */
    /* gives a bounce back effect */
    transform: translateX(1.75rem);
  }

  /* When the animation finishes */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}



@keyframes moveInRight {
  /* When the animation starts */
  0% {
    opacity: 0;
    /* have the element start 100px to the left from where it will be positioned */
    transform: translateX(10rem);
  }

  80% {
    /* moves a little further right than the final position */
    /* gives a bounce back effect */
    transform: translateX(-1rem);
  }

  /* When the animation finishes */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn {
    /* Make the visited and unvisited states look the same */
    &:link,
    &:visited {
    text-transform: uppercase;
    text-decoration: none;

    /* shorthand for applying padding: 15px(top & bottom) 40px(left and right) */
    padding: 1.5rem 4rem;
    display: inline-block;

    /* round out edges of the button */
    border-radius: 10rem;

    /* make all transitions take 0.2seconds */
    transition: all 0.2s;

    font-size: 1.6rem;
    }

    &:hover {
    /* Y-axis moves from top to bottom. This button should move slightly upwards on hover so the param is negative */
    transform: translateY(-3px);

    /* x-value, y-value, blur, color */
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
    }

    /* occurs when the button is clicked */
    &:active {
    /* gives the effect that the button is being clicked in */
    transform: translateY(-1px);

    /* adjust the shadow slightly so that it makes clicking seem more physical */
    box-shadow: 0 .5rem 1rem rgba($color-black, 0.2);
    }

    &--white {
    background-color: $color-white;
    color: $color-grey-dark;
    }
}
